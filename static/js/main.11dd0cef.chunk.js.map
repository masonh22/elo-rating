{"version":3,"sources":["firebase.js","App.js","serviceWorker.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","database","BottomNav","props","value","BottomNavigation","onChange","event","newValue","update","showLabels","className","BottomNavigationAction","label","login","LeaderboardView","columns","name","selector","sortable","data","leaderboard","customStyles","rows","style","fontSize","headCells","defaultSortField","defaultSortAsc","useStyles","makeStyles","theme","formControl","margin","spacing","minWidth","selectEmpty","marginTop","ReportView","classes","React","useState","winner","setWinner","loser","setLoser","makeList","taken","list","l2","players","sort","a","b","i","length","username","push","MenuItem","FormControl","InputLabel","id","Select","labelId","e","target","Button","variant","color","onClick","submit","History","history","Login","user","setUser","pass","setPass","TextField","type","v","UpdatePass","oldpass","setOldpass","newpass","setNewpass","Profile","filter","message","rating","games_played","updatepass","Content","slice","loginfunc","view","App","state","current_view","ref","orderByChild","on","setState","json","toJSON","Object","keys","map","player","val","key","reverse","this","once","then","md5","assign","alert","old","newobj","mmrW","mmrL","gamesW","gamesL","nameW","nameL","win_prob","Math","pow","win_probability","change","round","d","Date","historyKey","newHistory","posted_by","mmr_change","date","getMonth","toString","getDate","updates","change_current_view","add_game","p1","p2","update_password","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.11dd0cef.chunk.js","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/database';\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyAgCVdrbzL6Qcc5byXkkABSm4oUAonDWhs\",\r\n  authDomain: \"elo-rating-b8532.firebaseapp.com\",\r\n  databaseURL: \"https://elo-rating-b8532.firebaseio.com\",\r\n  projectId: \"elo-rating-b8532\",\r\n  storageBucket: \"elo-rating-b8532.appspot.com\",\r\n  messagingSenderId: \"1089038380501\",\r\n  appId: \"1:1089038380501:web:66b47d2dd736f330f8615c\"\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\nexport default firebase;\r\n/*\r\n<!-- The core Firebase JS SDK is always required and must be listed first -->\r\n<script src=\"https://www.gstatic.com/firebasejs/7.19.0/firebase-app.js\"></script>\r\n\r\n<!-- TODO: Add SDKs for Firebase products that you want to use\r\n     https://firebase.google.com/docs/web/setup#available-libraries -->\r\n\r\n<script>\r\n  // Your web app's Firebase configuration\r\n  var firebaseConfig = {\r\n    apiKey: \"AIzaSyAgCVdrbzL6Qcc5byXkkABSm4oUAonDWhs\",\r\n    authDomain: \"elo-rating-b8532.firebaseapp.com\",\r\n    databaseURL: \"https://elo-rating-b8532.firebaseio.com\",\r\n    projectId: \"elo-rating-b8532\",\r\n    storageBucket: \"elo-rating-b8532.appspot.com\",\r\n    messagingSenderId: \"1089038380501\",\r\n    appId: \"1:1089038380501:web:66b47d2dd736f330f8615c\"\r\n  };\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n</script>*/","import React from 'react';\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport FormControl from '@material-ui/core/FormControl';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport DataTable from 'react-data-table-component';\nimport { makeStyles } from '@material-ui/core/styles';\nimport './App.css';\nimport firebase from './firebase.js';\nimport md5 from 'md5';\n\nconst database = firebase.database();\n\n\nconst BottomNav = props => {\n  const value = props.value;\n\n  return (\n    <BottomNavigation\n      value={value}\n      onChange={(event, newValue) => {\n        props.update(newValue);\n      }}\n      showLabels\n      className=\"bottom-nav\"\n    >\n      <BottomNavigationAction label=\"Leaderboard\" />\n      <BottomNavigationAction label=\"Report Game\" />\n      <BottomNavigationAction label=\"History\" />\n      <BottomNavigationAction label={props.login ? \"Log in\" : \"Profile\"} />\n    </BottomNavigation>\n  )\n}\n\nconst LeaderboardView = props => {\n  const columns = [\n    {\n      name: 'MMR',\n      selector: 'rating',\n      sortable: true,\n    },\n    {\n      name: 'Name',\n      selector: 'name',\n      sortable: true,\n    },\n    {\n      name: 'Games Played',\n      selector: 'games_played',\n      sortable: true,\n    },\n  ]\n  const customStyles = {\n    rows: {\n      style: { fontSize: '20px' }\n    },\n    headCells: {\n      style: { fontSize: '20px' }\n    }\n  };\n  return (<DataTable\n    columns={columns}\n    data={props.leaderboard}\n    customStyles={customStyles}\n    defaultSortField='rating'\n    defaultSortAsc={false} />);\n}\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\nconst ReportView = props => {\n  const classes = useStyles();\n  const [winner, setWinner] = React.useState('');\n  const [loser, setLoser] = React.useState('');\n\n  const makeList = (taken) => {\n    const list = [];\n    const l2 = props.players.sort((a, b) => a.name < b.name ? -1 : a.name > b.name ? 1 : 0);\n    for (var i = 0; i < l2.length; i++) {\n      if (l2[i].username === taken) continue;\n      list.push(<MenuItem value={l2[i].username}>{l2[i].name}</MenuItem>)\n    }\n    return list;\n  };\n\n  return (\n    <div className=\"selectors\">\n      <FormControl className={classes.formControl}>\n        <InputLabel id=\"winner-select-label\">Winner</InputLabel>\n        <Select\n          labelId=\"winner-select-label\"\n          id=\"winner-select\"\n          value={winner}\n          onChange={(e) => setWinner(e.target.value)}\n          className=\"select\"\n        >\n          {makeList(loser)}\n        </Select>\n      </FormControl>\n      <FormControl className={classes.formControl}>\n        <InputLabel id=\"loser-select-label\">Loser</InputLabel>\n        <Select\n          labelId=\"loser-select-label\"\n          id=\"loser-select\"\n          value={loser}\n          onChange={(e) => setLoser(e.target.value)}\n          className=\"select\"\n        >\n          {makeList(winner)}\n        </Select>\n      </FormControl>\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        onClick={() => props.submit(winner, loser)}\n      >\n        Submit\n      </Button>\n    </div>\n  )\n}\n\nconst History = props => {\n  const columns = [\n    {\n      name: 'Date',\n      selector: 'date',\n      sortable: true,\n    },\n    {\n      name: 'Winner',\n      selector: 'winner',\n      sortable: true,\n    },\n    {\n      name: 'Loser',\n      selector: 'loser',\n      sortable: true,\n    },\n    {\n      name: 'MMR Change',\n      selector: 'mmr_change',\n      sortable: true,\n    },\n  ]\n  const customStyles = {\n    rows: {\n      style: { fontSize: '20px' }\n    },\n    headCells: {\n      style: { fontSize: '20px' }\n    }\n  };\n  return (<DataTable\n    columns={columns}\n    data={props.history}\n    customStyles={customStyles}\n    defaultSortField='date'\n    defaultSortAsc={false} />);\n  /*\n    const make_list = () => {\n      return props.history.slice(0, 15).map((event) =>\n        <li key={event.key}>{event.date}: {event.winner} beats {event.loser}, +/- {event.mmr_change} MMR</li>\n      );\n    }\n    return <ul>{make_list()}</ul>;*/\n}\n\nconst Login = props => {\n  const [user, setUser] = React.useState('');\n  const [pass, setPass] = React.useState('');\n\n  return (\n    <div className=\"selectors\">\n      <TextField\n        id=\"username-input\"\n        label=\"Username\"\n        type=\"search\"\n        onChange={(v) => setUser(v.target.value)} />\n      <TextField\n        id=\"password-input\"\n        label=\"Password\"\n        type=\"password\"\n        onChange={(v) => setPass(v.target.value)}\n      />\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        onClick={() => props.submit(user, pass)}\n      >\n        Submit\n      </Button>\n    </div>);\n}\n\nconst UpdatePass = props => {\n  const [oldpass, setOldpass] = React.useState('');\n  const [newpass, setNewpass] = React.useState('');\n\n  return (\n    <div className=\"selectors-2\">\n      <TextField\n        id=\"oldpass-input\"\n        label=\"Old Password\"\n        type=\"password\"\n        onChange={(v) => setOldpass(v.target.value)} />\n      <TextField\n        id=\"password-input\"\n        label=\"New Password\"\n        type=\"password\"\n        onChange={(v) => setNewpass(v.target.value)}\n      />\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        onClick={() => props.update(oldpass, newpass)}\n      >\n        Submit\n      </Button>\n    </div>);\n}\n\nconst Profile = props => {\n  const history = props.history.filter(event =>\n    event.winner === props.user.name || event.loser === props.user.name);\n  const message =\n    `Current MMR: ${props.user.rating}. Games Played: ${props.user.games_played}`;\n\n  return (<div>\n    <h2>{props.user.name}</h2>\n    <p>{message}</p>\n    <History history={history} />\n    <UpdatePass update={props.updatepass} />\n  </div>);\n}\n\nconst Content = props => {\n  const views = [<LeaderboardView leaderboard={props.leaderboard} />,\n  <ReportView players={props.leaderboard} submit={props.submit} />,\n  <History history={props.history.slice(0, 15)} />,\n  props.login ? <Login submit={props.loginfunc} />\n    : <Profile history={props.history}\n      user={props.user}\n      updatepass={props.updatepass} />];\n  return views[props.view];\n}\n\nconst win_probability = (mmrW, mmrL) => {\n  return (1 / (1 + Math.pow(10, (mmrW - mmrL) / 400)));\n}\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      current_view: 0,\n      players: {},\n      leaderboard: [],\n      history: [],\n      user: null,\n    };\n  }\n\n  componentDidMount() {\n    database.ref('users').orderByChild('rating').on('value', data => {\n      this.setState(() => {\n        const json = data.toJSON();\n        const leaderboard = Object.keys(json).map(user => {\n          const player = json[user]\n          player['username'] = user;\n          return player;\n        });\n        return { players: data.val(), leaderboard };\n      });\n    });\n    database.ref('history').on('value', data => {\n      this.setState(() => {\n        const json = data.toJSON();\n        const history = Object.keys(json).map(key => json[key]);\n        return { history: history.reverse() };\n      });\n    });\n  }\n\n  change_current_view(val) {\n    this.setState({ current_view: val });\n  }\n\n  login(user, pass) {\n    if (!this.state.players[user]) {\n      alert(\"Username is incorrect\");\n      return;\n    }\n    database.ref('passwords').once('value').then(data => {\n      if (md5(pass) !== data.val()[user]) {\n        alert(\"Password is incorrect\");\n        return;\n      }\n      this.setState(state => ({\n        user: Object.assign({ username: user }, state.players[user])\n      }));\n    });\n  }\n\n  update_password(old, newpass) {\n    database.ref('passwords').once('value').then(data => {\n      if (md5(old) !== data.val()[this.state.user.username]) {\n        alert(\"Password is incorrect\");\n      }\n      const newobj = {};\n      newobj[this.state.user.username] = md5(newpass);\n      database.ref('passwords').update(newobj);\n      alert(\"Password changed\");\n    });\n  }\n\n  add_game(winner, loser) {\n    if (this.state.user === null) {\n      alert(\"You need to be logged in\");\n      return;\n    }\n    if (this.state.players[winner] && this.state.players[loser]) {\n      const mmrW = this.state.players[winner].rating;\n      const mmrL = this.state.players[loser].rating;\n      const gamesW = this.state.players[winner].games_played;\n      const gamesL = this.state.players[loser].games_played;\n      const nameW = this.state.players[winner].name;\n      const nameL = this.state.players[loser].name;\n      const win_prob = win_probability(mmrW, mmrL);\n      const change = Math.round(win_prob * 50);\n\n      const d = new Date();\n\n      const historyKey = database.ref('history').push().key;\n      const newHistory = {\n        winner: nameW,\n        loser: nameL,\n        posted_by: this.state.user,\n        mmr_change: change,\n        date: (d.getMonth() + 1).toString() + '/' + d.getDate().toString(),\n      }\n\n      const updates = {};\n      updates['/history/' + historyKey] = newHistory;\n      updates['users/' + winner + '/rating'] = mmrW + change;\n      updates['users/' + loser + '/rating'] = mmrL - change;\n      updates['users/' + winner + '/games_played'] = gamesW + 1;\n      updates['users/' + loser + '/games_played'] = gamesL + 1;\n      database.ref().update(updates);\n    }\n    this.change_current_view(0);\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"content-container\">\n          <Content\n            leaderboard={this.state.leaderboard}\n            history={this.state.history}\n            view={this.state.current_view}\n            submit={(winner, loser) => this.add_game(winner, loser)}\n            login={this.state.user === null}\n            loginfunc={(user, pass) => this.login(user, pass)}\n            user={this.state.user}\n            updatepass={(p1, p2) => this.update_password(p1, p2)} />\n        </div>\n        <div className=\"footer\">\n          <BottomNav\n            value={this.state.current_view}\n            update={(v) => this.change_current_view(v)}\n            login={this.state.user === null} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}